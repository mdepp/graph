// Computation Graph
digraph {
	"<class 'node.Add'>; 0"
	"<class 'node.Add'>; 0" -> "<class 'node.Add'>; 1"
	"<class 'node.Add'>; 0" -> "<class 'node.Multiply'>; 3"
	"<class 'node.Add'>; 1"
	"<class 'node.Add'>; 1" -> "<class 'node.Variable'>; 2"
	"<class 'node.Add'>; 1" -> "<class 'node.Variable'>; 2"
	"<class 'node.Variable'>; 2"
	"<class 'node.Multiply'>; 3"
	"<class 'node.Multiply'>; 3" -> "<class 'node.Add'>; 5"
	"<class 'node.Multiply'>; 3" -> "<class 'node.Constant'>; 4"
	"<class 'node.Constant'>; 4"
	"<class 'node.Add'>; 5"
	"<class 'node.Add'>; 5" -> "<class 'node.Add'>; 6"
	"<class 'node.Add'>; 5" -> "<class 'node.Negate'>; 14"
	"<class 'node.Add'>; 6"
	"<class 'node.Add'>; 6" -> "<class 'node.Add'>; 7"
	"<class 'node.Add'>; 6" -> "<class 'node.Constant'>; 15"
	"<class 'node.Add'>; 7"
	"<class 'node.Add'>; 7" -> "<class 'node.Add'>; 9"
	"<class 'node.Add'>; 7" -> "<class 'node.Negate'>; 8"
	"<class 'node.Negate'>; 8"
	"<class 'node.Negate'>; 8" -> "<class 'node.Constant'>; 15"
	"<class 'node.Add'>; 9"
	"<class 'node.Add'>; 9" -> "<class 'node.Multiply'>; 10"
	"<class 'node.Add'>; 9" -> "<class 'node.Constant'>; 15"
	"<class 'node.Multiply'>; 10"
	"<class 'node.Multiply'>; 10" -> "<class 'node.Add'>; 12"
	"<class 'node.Multiply'>; 10" -> "<class 'node.Add'>; 11"
	"<class 'node.Add'>; 11"
	"<class 'node.Add'>; 11" -> "<class 'node.Variable'>; 13"
	"<class 'node.Add'>; 11" -> "<class 'node.Constant'>; 15"
	"<class 'node.Add'>; 12"
	"<class 'node.Add'>; 12" -> "<class 'node.Variable'>; 13"
	"<class 'node.Add'>; 12" -> "<class 'node.Constant'>; 15"
	"<class 'node.Variable'>; 13"
	"<class 'node.Negate'>; 14"
	"<class 'node.Negate'>; 14" -> "<class 'node.Constant'>; 15"
	"<class 'node.Constant'>; 15"
}
